---
   apiVersion: cert-manager.io/v1
   kind: Issuer
   metadata:
     name: letsencrypt-staging
     namespace: booksdump
   spec:
     acme:
       # The ACME server URL
       server: https://acme-staging-v02.api.letsencrypt.org/directory
       # Email address used for ACME registration
       email: aladex@gmail.com
       # Name of a secret used to store the ACME account private key
       privateKeySecretRef:
         name: letsencrypt-staging
       # Enable the HTTP-01 challenge provider
       solvers:
       - http01:
           ingress:
             class:  nginx

---
   apiVersion: cert-manager.io/v1
   kind: Issuer
   metadata:
     name: letsencrypt-prod
     namespace: booksdump
   spec:
     acme:
       # The ACME server URL
       server: https://acme-v02.api.letsencrypt.org/directory
       # Email address used for ACME registration
       email: aladex@gmail.com
       # Name of a secret used to store the ACME account private key
       privateKeySecretRef:
         name: letsencrypt-prod
       # Enable the HTTP-01 challenge provider
       solvers:
       - http01:
           ingress:
             class: nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: booksdump
  name: booksdump
  namespace: booksdump
spec:
  selector:
    matchLabels:
      app: booksdump
  template:
    metadata:
      labels:
        app: booksdump
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: booksdump
          image: aladex/gopds-frontend:v0.0.17
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http-booksdump
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /index.html
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
---
apiVersion: v1
kind: Service
metadata:
  name: booksdump
  namespace: booksdump
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: http-booksdump
  selector:
    app: booksdump
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: booksdump
  namespace: booksdump
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Disposition,Content-Type';
      proxy_set_header        X-Real-IP       $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    cert-manager.io/issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - booksdump.com
    - www.booksdump.com
    secretName: ingress-nginx-booksdump-tls
  rules:
  - host: "booksdump.com"
    http:
      paths:
      - path: "/books-posters/.*"
        pathType: Prefix
        backend:
          service:
            name: booksdump-static
            port:
              number: 80
      - path: "/api/.*"
        pathType: Prefix
        backend:
          service:
            name: external-gopds
            port:
              number: 80
      - path: "/.*"
        pathType: Prefix
        backend:
          service:
            name: booksdump
            port:
              number: 80
      - path: "/books/"
        pathType: Prefix
        backend:
          service:
            name: booksdump
            port:
              number: 80
  - host: "www.booksdump.com"
    http:
      paths:
      - path: "/books-posters/.*"
        pathType: Prefix
        backend:
          service:
            name: booksdump-static
            port:
              number: 80
      - path: "/api/.*"
        pathType: Prefix
        backend:
          service:
            name: external-gopds
            port:
              number: 80
      - path: "/.*"
        pathType: Prefix
        backend:
          service:
            name: booksdump
            port:
              number: 80

  - host: "cdn.booksdump.com"
    http:
      paths:
      - path: "/books-posters/.*"
        pathType: Prefix
        backend:
          service:
            name: booksdump-static
            port:
              number: 80
      - path: "/api/.*"
        pathType: Prefix
        backend:
          service:
            name: external-gopds
            port:
              number: 80
      - path: "/.*"
        pathType: Prefix
        backend:
          service:
            name: booksdump
            port:
              number: 80